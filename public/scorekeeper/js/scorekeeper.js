// Generated by CoffeeScript 1.4.0
(function() {
  var $plus, Board, ScoreKeeper, boardTemplate,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  boardTemplate = '\
  <div class="scoreboard">\
    <form>\
      <input type="text" />\
      <textarea class="score"></textarea>\
    </form>\
    <div class="total"></div>\
    <a href="#" class="close">-</a>\
  </div>\
';

  $plus = $('#plus');

  Board = (function() {

    function Board() {
      this.calculateScore = __bind(this.calculateScore, this);

      this.remove = __bind(this.remove, this);
      this.$el = $(boardTemplate);
      this.add();
      this.bindEvents();
    }

    Board.prototype.add = function() {
      return $plus.before(this.$el);
    };

    Board.prototype.remove = function(e) {
      e.preventDefault();
      return this.$el.remove();
    };

    Board.prototype.bindEvents = function() {
      return this.$el.on('keypress', '.score', this.calculateScore).on('click', '.close', this.remove);
    };

    Board.prototype.calculateScore = function(e) {
      var content, score, scores, total, _i, _len;
      if (e.keyCode === 13) {
        content = $(e.target).val();
        scores = content.split("\n");
        total = 0;
        for (_i = 0, _len = scores.length; _i < _len; _i++) {
          score = scores[_i];
          if (!isNaN(+score)) {
            total += +score;
          }
        }
        return this.updateScore(total);
      }
    };

    Board.prototype.updateScore = function(score) {
      return this.$el.find('.total').text(score);
    };

    return Board;

  })();

  ScoreKeeper = (function() {

    function ScoreKeeper() {
      this.addBoard = __bind(this.addBoard, this);
      this.addBoard();
      this.addBoard();
      this.bindEvents();
    }

    ScoreKeeper.prototype.bindEvents = function() {
      $('body').on('submit', 'form', this.formSubmit);
      return $plus.on('click', this.addBoard);
    };

    ScoreKeeper.prototype.formSubmit = function(e) {
      return e.preventDefault();
    };

    ScoreKeeper.prototype.addBoard = function(e) {
      if (e) {
        e.preventDefault();
      }
      return new Board();
    };

    return ScoreKeeper;

  })();

  $(function() {
    return new ScoreKeeper();
  });

}).call(this);
