(function(){define(["react","lodash","./util","./list-mixin","./board"],function(r,n,o,t,e){return r.createClass({mixins:[t],render:function(){var n,o;return n=this._rankings(),o=!(1===n.length&&!n[0]),r.DOM.div({className:"board-list"},r.DOM.div({className:"boards"},this.props.boards.map(function(r){return function(t){return e({key:t.id,name:t.name,rank:o?r._rankForBoard(n,t):null,scores:t.scores,ref:"board"+t.id,onUpdate:r.update,onRemove:r.remove,onPreviousBoard:r.previousBoard,onNextBoard:r.nextBoard})}}(this))),r.DOM.button({className:"plus",onClick:this.newBoard},"+"))},componentWillMount:function(){return this.listName="boards"},_rankings:function(){return n(this.props.boards).map(function(r){return o.scoresTotal(r.scores)}).unique().sortBy(function(r,n){return n-r}).value()},_rankForBoard:function(r,t){return 1+n.findIndex(r,function(r){return r===o.scoresTotal(t.scores)})},newBoard:function(){return this.props.boards.push({id:this.newId(),name:"",scores:[]}),this.save()},previousBoard:function(r){return this.moveToBoard(r,function(r){return function(n){return 0>n-1?r.props.boards.length-1:n-1}}(this))},nextBoard:function(r){return this.moveToBoard(r,function(r){return function(n){return n+1>r.props.boards.length-1?0:n+1}}(this))},moveToBoard:function(r,n){var o;return o=this.indexOf(r),o>-1?this.edit(this.props.boards[n(o)]):void 0},edit:function(r){return this.refs["board"+r.id].edit()}})})}).call(this);