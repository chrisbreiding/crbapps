(function(){define(["react","./list-mixin","./score"],function(e,r,t){return e.createClass({mixins:[r],render:function(){return e.DOM.div({className:"scores",onClick:this.edit},this.props.scores.map(function(e){return function(r){return t({key:r.id,score:r.score,ref:"score"+r.id,onPrevious:e.previousScore,onNext:e.nextOrNewScore,onPreviousBoard:e.props.onPreviousBoard,onNextBoard:e.props.onNextBoard,onUpdate:e.update,onRemove:e.remove})}}(this)))},componentWillMount:function(){return this.listName="scores"},edit:function(){var e;return e=this.props.scores[this.props.scores.length-1],e&&!e.score.trim()?this.editScore(e):this.editNewScore()},editScore:function(e){return this.refs["score"+e.id].edit()},previousScore:function(e){var r;return r=this.indexOf(e),r>0?this.editScore(this.props.scores[r-1]):void 0},nextOrNewScore:function(e){var r;return r=this.props.scores[this.indexOf(e)+1],e.score.trim()?r?this.editScore(r):this.editNewScore():void 0},editNewScore:function(){return this.addScore().then(function(e){return function(r){return e.editScore(r)}}(this))},addScore:function(){var e;return e={id:this.newId(),score:""},this.props.scores.push(e),this.save().then(function(){return e})}})})}).call(this);